{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React\\\\ir-widgets\\\\src\\\\Components\\\\Menu\\\\Menu.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useRef,\n  useState,\n  useEffect,\n  createRef\n} = React;\nconst items = [{\n  name: \"Freelance\",\n  color: \"#f44336\",\n  href: \"#\"\n}, {\n  name: \"Design\",\n  color: \"#e91e63\",\n  href: \"#\"\n}, {\n  name: \"Director\",\n  color: \"#9c27b0\",\n  href: \"#\"\n}, {\n  name: \"Experience\",\n  color: \"#673ab7\",\n  href: \"#\"\n}, {\n  name: \"Interface\",\n  color: \"#3f51b5\",\n  href: \"#\"\n}];\n\nconst Menu = _ref => {\n  _s();\n\n  let {\n    items\n  } = _ref;\n  const $root = useRef();\n  const $indicator1 = useRef();\n  const $indicator2 = useRef();\n  const $items = useRef(items.map(createRef));\n  const [active, setActive] = useState(0);\n\n  const animate = () => {\n    const menuOffset = $root.current.getBoundingClientRect();\n    const activeItem = $items.current[active].current;\n    const {\n      width,\n      height,\n      top,\n      left\n    } = activeItem.getBoundingClientRect();\n    const settings = {\n      x: left - menuOffset.x,\n      y: top - menuOffset.y,\n      width: width,\n      height: height,\n      backgroundColor: items[active].color,\n      ease: \"elastic.out(.7, .7)\",\n      duration: 0.8\n    };\n    gsap.to($indicator1.current, { ...settings\n    });\n    gsap.to($indicator2.current, { ...settings,\n      duration: 1\n    });\n  };\n\n  useEffect(() => {\n    animate();\n    window.addEventListener(\"resize\", animate);\n    return () => {\n      window.removeEventListener(\"resize\", animate);\n    };\n  }, [active]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: $root,\n    className: \"menu\",\n    children: [items.map((item, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n      ref: $items.current[index],\n      className: `item ${active === index ? \"active\" : \"\"}`,\n      onMouseEnter: () => {\n        setActive(index);\n      },\n      href: item.href,\n      children: item.name\n    }, item.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: $indicator1,\n      className: \"indicator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: $indicator2,\n      className: \"indicator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"9EUAYhx34e92927KO59ru4tObzU=\");\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["useRef","useState","useEffect","createRef","React","items","name","color","href","Menu","$root","$indicator1","$indicator2","$items","map","active","setActive","animate","menuOffset","current","getBoundingClientRect","activeItem","width","height","top","left","settings","x","y","backgroundColor","ease","duration","gsap","to","window","addEventListener","removeEventListener","item","index"],"sources":["D:/React/React/ir-widgets/src/Components/Menu/Menu.js"],"sourcesContent":["const { useRef, useState, useEffect, createRef } = React;\r\n\r\nconst items = [\r\n  {\r\n    name: \"Freelance\",\r\n    color: \"#f44336\",\r\n    href: \"#\",\r\n  },\r\n  {\r\n    name: \"Design\",\r\n    color: \"#e91e63\",\r\n    href: \"#\",\r\n  },\r\n  {\r\n    name: \"Director\",\r\n    color: \"#9c27b0\",\r\n    href: \"#\",\r\n  },\r\n  {\r\n    name: \"Experience\",\r\n    color: \"#673ab7\",\r\n    href: \"#\",\r\n  },\r\n  {\r\n    name: \"Interface\",\r\n    color: \"#3f51b5\",\r\n    href: \"#\",\r\n  },\r\n];\r\n\r\nconst Menu = ({ items }) => {\r\n  const $root = useRef();\r\n  const $indicator1 = useRef();\r\n  const $indicator2 = useRef();\r\n  const $items = useRef(items.map(createRef));\r\n  const [active, setActive] = useState(0);\r\n\r\n  const animate = () => {\r\n    const menuOffset = $root.current.getBoundingClientRect();\r\n    const activeItem = $items.current[active].current;\r\n    const { width, height, top, left } = activeItem.getBoundingClientRect();\r\n\r\n    const settings = {\r\n      x: left - menuOffset.x,\r\n      y: top - menuOffset.y,\r\n      width: width,\r\n      height: height,\r\n      backgroundColor: items[active].color,\r\n      ease: \"elastic.out(.7, .7)\",\r\n      duration: 0.8,\r\n    };\r\n\r\n    gsap.to($indicator1.current, {\r\n      ...settings,\r\n    });\r\n\r\n    gsap.to($indicator2.current, {\r\n      ...settings,\r\n      duration: 1,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    animate();\r\n    window.addEventListener(\"resize\", animate);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", animate);\r\n    };\r\n  }, [active]);\r\n\r\n  return (\r\n    <div ref={$root} className=\"menu\">\r\n      {items.map((item, index) => (\r\n        <a\r\n          key={item.name}\r\n          ref={$items.current[index]}\r\n          className={`item ${active === index ? \"active\" : \"\"}`}\r\n          onMouseEnter={() => {\r\n            setActive(index);\r\n          }}\r\n          href={item.href}\r\n        >\r\n          {item.name}\r\n        </a>\r\n      ))}\r\n      <div ref={$indicator1} className=\"indicator\" />\r\n      <div ref={$indicator2} className=\"indicator\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}